int Solution::solve(string a) {
    int n = a.size();
    vector<int> left(n, 0);
    vector<int> right(n, 0);
    left[0] = 0 + a[0]-'0';
    right[n-1] = 0 + a[n-1]-'0';
    int count = 0;
    for(int i=0;i<n;i++)
    {
        if(a[i] == '1')
        {
            count++;
        }
    }
    if(count == n)
    {
        return n;
    }
    for(int i=1;i<n;i++)
    {
        
        if(a[i] == '1')
        {
            left[i] = left[i-1];
            left[i]++;
        }
    }
    for(int i=n-2;i>=0;i--)
    {
        
        if(a[i] == '1')
        {
            right[i] = right[i+1];
            right[i]++;
        }
    }
    int ans = 0;
    for(int i=0;i<n;i++)
    {
        if(a[i] == '0' && (i-1) >= 0 && (i+1) < n)
        {
            ans = max(ans, left[i-1] + right[i+1]);
        }
        else if(a[i] == '0' && (i-1) >= 0)
        {
            ans = max(ans, left[i-1]);
        }
        else if(a[i] == '0' && (i+1) < n)
        {
            ans = max(ans, right[i+1]);
        }
    }
    if(ans == count)
    {
        return ans;
    }
    return ans+1;
}
