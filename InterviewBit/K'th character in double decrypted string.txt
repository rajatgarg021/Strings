string Solution::solve(string a, int k) {
    stack<pair<char,long long  int> > s;
    int n = a.size();
    long long int len = 0;
    int i=0;
    //int count = 0;
    while(i < n)
    {
        if(len > k)
        {
            break;
        }
        if(i < n && a[i]-'a' >= 0 && a[i]-'a'<= 26)
        {
            while(a[i]-'a' >= 0 && a[i]-'a'<= 26)
            {
                len++;
                s.push({a[i], len});  
                i++;
            }
            
        }
        else if(a[i]-'0' >= 0 && a[i] -'0' <= 9)
        {
            string temp;
            while(i < n && a[i]-'0' >= 0 && a[i] -'0' <= 9)
            {
                temp += a[i];
                i++;
            }
            len = len*(stoi(temp));
        }
        //count++;
    }
    //cout<<count;
    string ans = "";
    while(!s.empty())
    {
        pair<char, int> p = s.top();
        s.pop();
        ans = p.first;
        int val = p.second;
        if(val <= k )
        {
            k = k%val;
        }
        else if(val > k)
        {
            continue;
        }
        
        if(k == 0)
        {
            return ans;
        }
    }
}
